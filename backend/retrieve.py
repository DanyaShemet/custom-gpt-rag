from dotenv import load_dotenv
import os
import sys

# üîß –ü—Ä–∏–º—É—Å–æ–≤–µ –∫–æ–¥—É–≤–∞–Ω–Ω—è stdout —É UTF-8 (–¥–ª—è Windows)
if sys.stdout.encoding != 'utf-8':
    sys.stdout.reconfigure(encoding='utf-8')

import chromadb
from chromadb.utils import embedding_functions

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env
load_dotenv()
openai_key = os.getenv("CHROMA_OPENAI_API_KEY")

if not openai_key:
    raise ValueError("CHROMA_OPENAI_API_KEY is not –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —É .env")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
if len(sys.argv) < 3:
    print("‚ö†Ô∏è –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç–∏ question —ñ sessionId")
    sys.exit(1)

question = sys.argv[1]
session_id = sys.argv[2]
collection_name = f"user_{session_id}"

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç–∞
client = chromadb.PersistentClient(path="backend/chroma_index")
embedding_function = embedding_functions.OpenAIEmbeddingFunction(api_key=openai_key)

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ—ó
try:
    collection = client.get_collection(name=collection_name, embedding_function=embedding_function)
except Exception:
    print("‚ö†Ô∏è –ö–æ–ª–µ–∫—Ü—ñ—é –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –≤–æ–Ω–∞ –ø–æ—Ä–æ–∂–Ω—è.")
    sys.exit(0)

# –ó–∞–ø–∏—Ç
results = collection.query(query_texts=[question], n_results=3)
chunks = results.get("documents", [[]])[0]

# –í–∏–≤—ñ–¥ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ–≤
print("\n---\n".join(chunks))
